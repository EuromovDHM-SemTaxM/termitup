{
	"openapi": "3.0.0",
	"info": {
		"description": "[WORK IN PROGRESS] This service generates Enriched Linked Terminologies from scratch: given a term, it retrieves multilingual data from the Linguistic Linked Open Data cloud (translations, definitions, synonyms and other terminological data). The result is published as a set of JSON-LD files modeled in SKOS-XL.",
		"version": "1.0.0",
		"title": "TermitUp",
		"license": {
			"name": "Prêt à Llod",
			"url": "https://www.pret-a-llod.eu/"
		}
	},
	"tags": [
		{
			"name": "Terminology",
			"description": "Set of methods to work with terminologies and corpus"
		}
	],
	"paths": {
		"/extract_terminology": {
			"post": {
				"tags": [
					"Terminology"
				],
				
				"summary": "Extract terminology from corpus",
                "parameters": [
					{
						"in": "lang_in",
						"name": "lang_in",
						"required": true,
						"description": "Language of the source terms: es, en...",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "corpus",
						"name": "corpus",
						"required": true,
						"description": "Corpus in which the terms appear.",
						"schema": {
							"$ref": "#/components/schemas/corpusonly"
						}
					}

				]
				,
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/term"
								}
							}
						}
					},
					"404": {
						"description": "Failed. No more requests.",
						"content": {}
					}
				}
			}	
		},
		"/postproc_terminology": {
			"post": {
				"tags": [
					"Terminology"
				],
				
				"summary": "Postprocess automatically extracted terminology",
				"parameters": [
					{
						"in": "terms",
						"name": "terms",
						"required": true,
						"description": "Terms to postprocess, separated by commas",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "tasks",
						"name": "tasks",
						"required": true,
						"description": "Write timeEx to remove temporal expressions; write patterns to remove non terminological structures in Spanish; write plurals to remove plurals in Spanish; write accents to remove accents in Spanish. To perform several tasks, write them separated by commas: \"tasks\": \"timeEx, patterns, numbers\"",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "lang_in",
						"name": "lang_in",
						"required": true,
						"description": "Language of the source terms: es, en...",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "corpus",
						"name": "corpus",
						"required": true,
						"description": "Corpus in which the terms appear.",
						"schema": {
							"$ref": "#/components/schemas/corpusonly"
						}
					}

				]
				,
				"requestBody": {
					  "description": "Description",
					  "required": true,
					  "content": {
						"application/json": {
						  "schema": {
							"$ref": "#/components/schemas/corpusonly"
						  }
						}
					  }
					}
				,
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/term"
								}
							}
						}
					},
					"404": {
						"description": "Failed. No more requests.",
						"content": {}
					}
				}
			}	
		},
		"/enriching_terminology": {
			"post": {
				"tags": [
					"Terminology"
				],
				
				"summary": "Enriches the extracted terms with disambiguated info.",
				"parameters": [
					{
						"in": "terms",
						"name": "terms",
						"required": true,
						"description": "Terms to enrich, separated by commas",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "resources",
						"name": "resources",
						"required": true,
						"description": "External resources to enrich the terms, separated by commas: eurovoc, iate, unesco, thesoz, stw, ilo",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "lang_in",
						"name": "lang_in",
						"required": true,
						"description": "Source language: es, en...",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "lang_out",
						"name": "lang_out",
						"required": true,
						"description": "Target languages (different from the source language)",
						"schema": {
							"$ref": "#/components/schemas/base"
						}
					},
					{
						"in": "corpus",
						"name": "corpus",
						"required": true,
						"description": "Corpus in which the terms appear.",
						"schema": {
							"$ref": "#/components/schemas/corpusonly"
						}
					}
				]
				,
				
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/term"
								}
							}
						}
					},
					"404": {
						"description": "Failed. No more requests.",
						"content": {}
					}
				}
			}	
		},
		"/relation_validation": {
			"post": {
				"tags": [
					"Terminology"
				],
				
				"summary": "Validates synonymy relations.",
				"parameters": [
					{
						"in": "synonyms",
						"name": "synonyms",
						"required": true,
						"description": "Validate synonyms with ConceptNet.",
						"schema": {
							"$ref": "#/components/schemas/options"
						}
					}
				]
				,
				"requestBody": {
					  "description": "Description",
					  "required": true,
					  "content": {
						"application/json": {
						  "schema": {
							"$ref": "#/components/schemas/enriching"
						  }
						}
					  }
					}
				,
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/term"
								}
							}
						}
					},
					"404": {
						"description": "Failed. No more requests.",
						"content": {}
					}
				}
			}	
		},
		"/term": {
			"get": {
				"tags": [
					"Terms"
				],
				
				"summary": "Term example method",
				"parameters": [
					{
						"in": "term",
						"name": "term",
						"required": true,
						"description": "term",
						"schema": {
							"$ref": ""
						}
					}
				]
				,
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/term"
								}
							}
						}
					},
					"404": {
						"description": "Failed. No more requests.",
						"content": {}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"base": {
	            "type": "string",
	            "format": "string"

	      	},
			"corpusonly": {
	        	"type": "object",
	        	"properties": {
	          "corpus": {
	            "type": "string",
	            "format": "string"
	          }
	        	}
	      	},
			"corpus": {
	        	"type": "object",
	        	"properties": {
	          "corpus": {
	            "type": "string",
	            "format": "string"
	          },
	          "language": {
	            "type": "string",
	            "format": "string"
	          }
	        	}
	      	},
	        "cleanterm": {
    	        "type": "object",
	        	"properties": {
    	        	"terms": {
	        			"type": "array",
	        			"items": {
    	        			"type":"string"
	        			}
	        			
	        		},
    	          "language": {
    	            "type": "string",
    	            "format": "string"
        	        	}
        	        }
	    	},
	    	"enriching": {
	        	"type": "object",
	        	"properties": {
	        		
	        		"terms": {
	        			"type": "array",
	        			"items": {
    	        			"type":"string"
	        			}
	        			
	        		},
	        		"source_language": {
	            		"type": "string",
	            		"format": "string"
	        		},
	        		"target_language": {
	            		"type": "string",
	            		"format": "string"
	    			},
	    			"schema_name": {
	            		"type": "string",
	           			 "format": "string"
	          		},
	    			"corpus": {
	            		"type": "string",
	           			 "format": "string"
	          		}
	          	}
	      },
	        "options": {
	        	"type": "boolean",
	        	"properties": {
	           "activate_option": {
	            "type": "boolean",
	            "format": "boolean"
	          }
	    	}
	      },
			"term": {
				"type": "object",
				"properties": {
					"context": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"inScheme": {
						"type": "string"
					},
					"source": {
						"type": "string"
					},
					"prefLabel": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/prefLabel"
						}
					},
					"altLabel": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/altLabel"
						}
					},
					"definition": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/definition"
						}
					},
					"broader": {
						"type": "string"
					},
					"narrower": {
						"type": "string"
					},
					"related": {
						"type": "string"
					}
				}
			},
			"prefLabel": {
				"type": "object",
				"properties": {
					"language": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"altLabel": {
				"type": "object",
				"properties": {
					"language": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"definition": {
				"type": "object",
				"properties": {
					"language": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			}
		}
	}
}